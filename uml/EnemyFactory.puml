@startuml
'https://plantuml.com/class-diagram

interface EnemyAircraftFactory{
    + createEnemyAircraft(int locationX, int locationY, int speedX, int speedY, int hp):AbstractAircraft
}

class MobEnemyFactory{
    + createEnemyAircraft(int locationX, int locationY, int speedX, int speedY, int hp):MobEnemy
}

class EliteEnemyFactory{
    + createEliteAircraft(int locationX, int locationY, int speedX, int speedY, int hp):EliteEnemy
}

abstract class AbstractAircraft
{
	# maxHp:int
    # hp:int
    + AbstractAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
    + decreaseHp(int decrease):void
    + getHp():int
    + {abstract} shoot():List<BaseBullet>
 }

MobEnemy <.. MobEnemyFactory
EnemyAircraftFactory <|.. MobEnemyFactory
EliteEnemy <.. EliteEnemyFactory
EnemyAircraftFactory <|.. EliteEnemyFactory

class MobEnemy {
    + MobEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward():void
    + shoot():List<BaseBullet>
}
AbstractAircraft <|-- MobEnemy

class EliteEnemy {
    + EliteEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward():void
    + shoot():List<BaseBullet>
}
AbstractAircraft <|-- EliteEnemy

@enduml